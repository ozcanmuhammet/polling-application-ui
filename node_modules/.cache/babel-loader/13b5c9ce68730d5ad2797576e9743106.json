{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OZCAN\\\\Desktop\\\\Workspaces\\\\polling-application-ui\\\\src\\\\pages\\\\Statistics.js\";\nimport React, { useState, useEffect } from 'react';\nimport { List, Grid, Divider, Header, Icon } from 'semantic-ui-react';\nimport pollingApi from '../apis/pollingApi';\nimport PollHeader from '../components/PollHeader';\nimport { HTTP_OK } from '../util/Constants';\n\nconst Statistics = () => {\n  const [statisticsList, setStatisticsList] = useState([]);\n  const [questionText, setQuestionText] = useState(\"\");\n  useEffect(() => {\n    fetchStatistics();\n  }, []);\n\n  const fetchStatistics = async () => {\n    const response = await pollingApi.get(\"/admin/answers/statistics\");\n\n    if (response.status === HTTP_OK) {\n      setStatisticsList(response.data.statisticOptionDtoList);\n      setQuestionText(response.data.questionText);\n    }\n  };\n\n  const renderStatisticItem = () => {\n    if (statisticsList) {\n      return statisticsList.map((statistic, index) => {\n        return /*#__PURE__*/React.createElement(StatisticItem, {\n          questionText: questionText,\n          statistic: statistic,\n          index: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 24\n          }\n        });\n      });\n    } else {\n      return \"HiÃ§ istatistik yok\";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PollHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    horizontal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"bar chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }), \"\\u0130statistik\")), /*#__PURE__*/React.createElement(List, {\n    divided: true,\n    relaxed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, renderStatisticItem()));\n};\n\nconst StatisticItem = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    divided: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 32\n    }\n  }, \"Soru: \"), \" \", props.questionText))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '3%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 36\n    }\n  }, \"Se\\xE7enek: \"), \" \", props.statistic.optionText))), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 36\n    }\n  }, \"Se\\xE7ilme say\\u0131s\\u0131: \"), \" \", props.statistic.answerCount))))), /*#__PURE__*/React.createElement(Divider, {\n    section: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Statistics;","map":{"version":3,"sources":["C:/Users/OZCAN/Desktop/Workspaces/polling-application-ui/src/pages/Statistics.js"],"names":["React","useState","useEffect","List","Grid","Divider","Header","Icon","pollingApi","PollHeader","HTTP_OK","Statistics","statisticsList","setStatisticsList","questionText","setQuestionText","fetchStatistics","response","get","status","data","statisticOptionDtoList","renderStatisticItem","map","statistic","index","StatisticItem","props","marginLeft","optionText","answerCount"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { List, Grid, Divider, Header, Icon } from 'semantic-ui-react'\r\nimport pollingApi from '../apis/pollingApi';\r\nimport PollHeader from '../components/PollHeader';\r\nimport { HTTP_OK } from '../util/Constants';\r\n\r\nconst Statistics = () => {\r\n    const [statisticsList, setStatisticsList] = useState([]);\r\n    const [questionText, setQuestionText] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetchStatistics();\r\n    }, [])\r\n\r\n    const fetchStatistics = async () => {\r\n        const response = await pollingApi.get(\"/admin/answers/statistics\");\r\n        if (response.status === HTTP_OK) {\r\n            setStatisticsList(response.data.statisticOptionDtoList);\r\n            setQuestionText(response.data.questionText);\r\n        }\r\n    }\r\n\r\n    const renderStatisticItem = () => {\r\n        if (statisticsList) {\r\n            return statisticsList.map((statistic, index) => {\r\n                return <StatisticItem questionText={questionText} statistic={statistic} index={index} />\r\n            });\r\n        } else {\r\n            return \"HiÃ§ istatistik yok\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PollHeader />\r\n            <Divider horizontal>\r\n                <Header as='h4'>\r\n                    <Icon name='bar chart' />\r\n                    Ä°statistik\r\n                 </Header>\r\n            </Divider>\r\n            <List divided relaxed>\r\n                {renderStatisticItem()}\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst StatisticItem = (props) => {\r\n    return (\r\n        <div>\r\n            <Grid divided>\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <label><strong>Soru: </strong> {props.questionText}</label>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n\r\n                <div style={{ marginLeft: '3%' }}>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <label><strong>SeÃ§enek: </strong> {props.statistic.optionText}</label>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <label><strong>SeÃ§ilme sayÄ±sÄ±: </strong> {props.statistic.answerCount}</label>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </div>\r\n            </Grid>\r\n            <Divider section />\r\n        </div>\r\n    );\r\n}\r\nexport default Statistics;"]},"metadata":{},"sourceType":"module"}