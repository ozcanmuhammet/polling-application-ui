{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OZCAN\\\\Desktop\\\\Workspaces\\\\polling-application-ui\\\\src\\\\pages\\\\AddQuestion.js\";\nimport React, { useState, useEffect } from 'react';\nimport { List } from 'semantic-ui-react';\nimport pollingApi from '../apis/pollingApi';\nimport { checkLogin } from '../util/CookieUtil';\nimport { HTTP_OK } from '../util/Constants';\nimport PollItem from '../components/PollItem';\nimport PollHeader from '../components/PollHeader';\n\nconst AddQuestion = () => {\n  const [pollList, setPollList] = useState([]);\n  useEffect(() => {\n    checkLogin();\n    fetchPollItems();\n  }, []);\n\n  const fetchPollItems = async () => {\n    const response = await pollingApi.get('/polls');\n\n    if (response.status === HTTP_OK) {\n      setPollList(response.data);\n    }\n  };\n\n  const renderPollItems = () => {\n    return pollList.map(poll => {\n      return /*#__PURE__*/React.createElement(PollItem, {\n        poll: poll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 20\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PollHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    divided: true,\n    relaxed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, renderPollItems()));\n};\n\nexport default AddQuestion;","map":{"version":3,"sources":["C:/Users/OZCAN/Desktop/Workspaces/polling-application-ui/src/pages/AddQuestion.js"],"names":["React","useState","useEffect","List","pollingApi","checkLogin","HTTP_OK","PollItem","PollHeader","AddQuestion","pollList","setPollList","fetchPollItems","response","get","status","data","renderPollItems","map","poll"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,UAAU;AACVO,IAAAA,cAAc;AACjB,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,cAAc,GAAG,YAAY;AAC/B,UAAMC,QAAQ,GAAG,MAAMT,UAAU,CAACU,GAAX,CAAe,QAAf,CAAvB;;AACA,QAAID,QAAQ,CAACE,MAAT,KAAoBT,OAAxB,EAAiC;AAC7BK,MAAAA,WAAW,CAACE,QAAQ,CAACG,IAAV,CAAX;AACH;AACJ,GALD;;AAOA,QAAMC,eAAe,GAAG,MAAM;AAC1B,WAAOP,QAAQ,CAACQ,GAAT,CAAcC,IAAD,IAAU;AAC1B,0BAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,CAAP;AAIH,GALD;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,OAAO,MAAb;AAAc,IAAA,OAAO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,eAAe,EADpB,CAFJ,CADJ;AAQH,CA9BD;;AAkCA,eAAeR,WAAf","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react'\r\nimport { List } from 'semantic-ui-react'\r\nimport pollingApi from '../apis/pollingApi';\r\nimport { checkLogin } from '../util/CookieUtil';\r\nimport { HTTP_OK } from '../util/Constants';\r\nimport PollItem from '../components/PollItem';\r\nimport PollHeader from '../components/PollHeader';\r\n\r\nconst AddQuestion = () => {\r\n    const [pollList, setPollList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        checkLogin();\r\n        fetchPollItems();\r\n    }, []);\r\n\r\n    const fetchPollItems = async () => {\r\n        const response = await pollingApi.get('/polls');\r\n        if (response.status === HTTP_OK) {\r\n            setPollList(response.data);\r\n        }\r\n    }\r\n\r\n    const renderPollItems = () => {\r\n        return pollList.map((poll) => {\r\n            return <PollItem poll={poll} />\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PollHeader />\r\n            <List divided relaxed>\r\n                {renderPollItems()}\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default AddQuestion;"]},"metadata":{},"sourceType":"module"}