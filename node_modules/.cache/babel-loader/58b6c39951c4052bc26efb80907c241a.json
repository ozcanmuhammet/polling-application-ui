{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OZCAN\\\\Desktop\\\\Workspaces\\\\polling-application-ui\\\\src\\\\components\\\\AddQuestion.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Input, Button, Header, Icon } from 'semantic-ui-react';\nimport pollingApi from '../apis/pollingApi';\nimport { checkLogin } from '../util/CookieUtil';\nimport { HTTP_OK } from '../util/Constants';\nimport PollHeader from '../components/PollHeader';\n\nconst AddQuestion = props => {\n  const [answerList, setAnswerList] = useState([]);\n  const [optionText, setOptionText] = useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  useEffect(() => {\n    checkLogin();\n  }, []);\n\n  const addQuestion = () => {\n    if (optionText) {\n      let tempAnswerList = answerList;\n      tempAnswerList.push({\n        questionId: props.questionId,\n        optionText: optionText\n      });\n      setAnswerList(tempAnswerList);\n      setOptionText(\"\");\n    }\n  };\n\n  const renderQuestionList = () => {\n    if (answerList) {\n      return answerList.map((option, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 30\n          }\n        }, `${index + 1}) `), option.optionText, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 84\n          }\n        }));\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    trigger: /*#__PURE__*/React.createElement(Button, {\n      circular: true,\n      style: {\n        float: 'right'\n      },\n      icon: \"plus circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Soru Ekle\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    image: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    fluid: true,\n    placeholder: \"Soru ekle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    as: \"h4\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Se\\xE7enekler\"), renderQuestionList(), /*#__PURE__*/React.createElement(Input, {\n    fluid: true,\n    value: optionText,\n    icon: /*#__PURE__*/React.createElement(Icon, {\n      name: \"plus circle\",\n      onClick: addQuestion,\n      inverted: true,\n      circular: true,\n      link: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 31\n      }\n    }),\n    placeholder: \"Se\\xE7enek ekle\",\n    onChange: e => {\n      setOptionText(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"black\",\n    onClick: () => setOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Vazge\\xE7\"), /*#__PURE__*/React.createElement(Button, {\n    content: \"Ekle\",\n    labelPosition: \"right\",\n    icon: \"checkmark\",\n    onClick: () => setOpen(false),\n    positive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst Answer = () => {};\n\nexport default AddQuestion;","map":{"version":3,"sources":["C:/Users/OZCAN/Desktop/Workspaces/polling-application-ui/src/components/AddQuestion.js"],"names":["React","useState","useEffect","Modal","Input","Button","Header","Icon","pollingApi","checkLogin","HTTP_OK","PollHeader","AddQuestion","props","answerList","setAnswerList","optionText","setOptionText","open","setOpen","addQuestion","tempAnswerList","push","questionId","renderQuestionList","map","option","index","float","e","target","value","Answer"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Modal, Input, Button, Header, Icon } from 'semantic-ui-react'\r\nimport pollingApi from '../apis/pollingApi';\r\nimport { checkLogin } from '../util/CookieUtil';\r\nimport { HTTP_OK } from '../util/Constants';\r\nimport PollHeader from '../components/PollHeader';\r\n\r\nconst AddQuestion = (props) => {\r\n    const [answerList, setAnswerList] = useState([]);\r\n    const [optionText, setOptionText] = useState(\"\");\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        checkLogin();\r\n    }, []);\r\n\r\n    const addQuestion = () => {\r\n        if (optionText) {\r\n            let tempAnswerList = answerList;\r\n            tempAnswerList.push({ questionId: props.questionId, optionText: optionText });\r\n            setAnswerList(tempAnswerList);\r\n            setOptionText(\"\");\r\n        }\r\n    }\r\n\r\n    const renderQuestionList = () => {\r\n        if (answerList) {\r\n            return answerList.map((option, index) => {\r\n                return (<div><strong>{`${index + 1}) `}</strong>{option.optionText}<br /></div>);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={<Button circular style={{ float: 'right' }} icon='plus circle' />}\r\n        >\r\n            <Modal.Header>Soru Ekle</Modal.Header>\r\n            <Modal.Content image>\r\n                <Modal.Description>\r\n                    <Input fluid placeholder='Soru ekle' />\r\n                    <Header as='h4' textAlign='center'>\r\n                        Se√ßenekler\r\n                    </Header>\r\n                    {renderQuestionList()}\r\n                    <Input\r\n                        fluid\r\n                        value={optionText}\r\n                        icon={<Icon name='plus circle' onClick={addQuestion} inverted circular link />}\r\n                        placeholder='Se√ßenek ekle'\r\n                        onChange={(e) => { setOptionText(e.target.value) }}\r\n                    />\r\n\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button color='black' onClick={() => setOpen(false)}>\r\n                    Vazge√ß\r\n          </Button>\r\n                <Button\r\n                    content=\"Ekle\"\r\n                    labelPosition='right'\r\n                    icon='checkmark'\r\n                    onClick={() => setOpen(false)}\r\n                    positive\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nconst Answer = () => {\r\n\r\n}\r\n\r\n\r\n\r\nexport default AddQuestion;"]},"metadata":{},"sourceType":"module"}