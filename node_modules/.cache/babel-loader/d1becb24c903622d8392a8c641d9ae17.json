{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OZCAN\\\\Desktop\\\\Workspaces\\\\polling-application-ui\\\\src\\\\pages\\\\Poll.js\";\nimport React, { useState, useEffect } from 'react';\nimport pollingApi from '../apis/pollingApi';\nimport { HTTP_OK } from '../util/Constants';\n\nconst Poll = props => {\n  const [pollQuestions, setPollQuestions] = useState([]);\n  useEffect(() => {\n    fetchPollQuestions();\n  }, []);\n\n  const fetchPollQuestions = async () => {\n    const response = await pollingApi.get(`/questions/${props.match.params.id}`);\n\n    if (response.status === HTTP_OK) {\n      setPollQuestions(response.data);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Poll\");\n};\n\nexport default Poll;","map":{"version":3,"sources":["C:/Users/OZCAN/Desktop/Workspaces/polling-application-ui/src/pages/Poll.js"],"names":["React","useState","useEffect","pollingApi","HTTP_OK","Poll","props","pollQuestions","setPollQuestions","fetchPollQuestions","response","get","match","params","id","status","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,kBAAkB;AACrB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,kBAAkB,GAAG,YAAY;AACnC,UAAMC,QAAQ,GAAG,MAAMP,UAAU,CAACQ,GAAX,CAAgB,cAAaL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,EAAG,EAAnD,CAAvB;;AACA,QAAIJ,QAAQ,CAACK,MAAT,KAAoBX,OAAxB,EAAiC;AAC7BI,MAAAA,gBAAgB,CAACE,QAAQ,CAACM,IAAV,CAAhB;AACH;AACJ,GALD;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,CAjBD;;AAkBA,eAAeX,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport pollingApi from '../apis/pollingApi';\r\nimport { HTTP_OK } from '../util/Constants';\r\n\r\nconst Poll = (props) => {\r\n    const [pollQuestions, setPollQuestions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchPollQuestions();\r\n    }, [])\r\n\r\n    const fetchPollQuestions = async () => {\r\n        const response = await pollingApi.get(`/questions/${props.match.params.id}`);\r\n        if (response.status === HTTP_OK) {\r\n            setPollQuestions(response.data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>Poll</div>\r\n    );\r\n}\r\nexport default Poll;"]},"metadata":{},"sourceType":"module"}