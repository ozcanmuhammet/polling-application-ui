{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OZCAN\\\\Desktop\\\\Workspaces\\\\polling-application-ui\\\\src\\\\pages\\\\Statistics.js\";\nimport React, { useState, useEffect } from 'react';\nimport { List, Grid, Image } from 'semantic-ui-react';\nimport pollingApi from '../apis/pollingApi';\nimport PollHeader from '../components/PollHeader';\nimport { HTTP_OK } from '../util/Constants';\n\nconst Statistics = () => {\n  const [statisticsList, setStatisticsList] = useState([]);\n  useEffect(() => {\n    fetchStatistics();\n  }, []);\n\n  const fetchStatistics = async () => {\n    const response = await pollingApi.get(\"/admin/answers/statistics\");\n\n    if (response.status === HTTP_OK) {\n      console.log(response.data);\n      setStatisticsList(response.data);\n    }\n  };\n\n  const renderStatisticItem = () => {\n    if (statisticsList) {\n      return statisticsList.map((statistic, index) => {\n        return /*#__PURE__*/React.createElement(StatisticItem, {\n          statistic: statistic,\n          index: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 24\n          }\n        });\n      });\n    } else {\n      return \"HiÃ§ istatistik yok\";\n    }\n  };\n  /*const renderPendingQuestionItems = () => {\r\n      return pendingQuestionList.map((question, index) => {\r\n          return <Question question={question} index={index} />\r\n      });\r\n  }*/\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PollHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    divided: true,\n    relaxed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, renderStatisticItem()));\n};\n\nconst StatisticItem = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: 3,\n    divided: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 32\n    }\n  }, \"Soru: \"), \" \", props.statistic.questionText))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 36\n    }\n  }, \"Se\\xE7enek No: \"), \" \", props.statistic.questionText))), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 36\n    }\n  }, \"Se\\xE7enek No: \"), \" \", props.statistic.questionText))), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 36\n    }\n  }, \"Se\\xE7enek No: \"), \" \", props.statistic.questionText))))));\n};\n\nexport default Statistics;","map":{"version":3,"sources":["C:/Users/OZCAN/Desktop/Workspaces/polling-application-ui/src/pages/Statistics.js"],"names":["React","useState","useEffect","List","Grid","Image","pollingApi","PollHeader","HTTP_OK","Statistics","statisticsList","setStatisticsList","fetchStatistics","response","get","status","console","log","data","renderStatisticItem","map","statistic","index","StatisticItem","props","questionText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { List, Grid, Image } from 'semantic-ui-react'\r\nimport pollingApi from '../apis/pollingApi';\r\nimport PollHeader from '../components/PollHeader';\r\nimport { HTTP_OK } from '../util/Constants';\r\n\r\nconst Statistics = () => {\r\n    const [statisticsList, setStatisticsList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchStatistics();\r\n    }, [])\r\n\r\n    const fetchStatistics = async () => {\r\n        const response = await pollingApi.get(\"/admin/answers/statistics\");\r\n        if (response.status === HTTP_OK) {\r\n            console.log(response.data);\r\n            setStatisticsList(response.data);\r\n        }\r\n    }\r\n\r\n    const renderStatisticItem = () => {\r\n        if (statisticsList) {\r\n            return statisticsList.map((statistic, index) => {\r\n                return <StatisticItem statistic={statistic} index={index} />\r\n            });\r\n        } else {\r\n            return \"HiÃ§ istatistik yok\";\r\n        }\r\n    }\r\n\r\n\r\n    /*const renderPendingQuestionItems = () => {\r\n        return pendingQuestionList.map((question, index) => {\r\n            return <Question question={question} index={index} />\r\n        });\r\n    }*/\r\n\r\n    return (\r\n        <div>\r\n            <PollHeader />\r\n            <List divided relaxed>\r\n                {renderStatisticItem()}\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst StatisticItem = (props) => {\r\n    return (\r\n        <div>\r\n            <Grid columns={3} divided>\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <label><strong>Soru: </strong> {props.statistic.questionText}</label>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n\r\n                <div>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <label><strong>SeÃ§enek No: </strong> {props.statistic.questionText}</label>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <label><strong>SeÃ§enek No: </strong> {props.statistic.questionText}</label>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <label><strong>SeÃ§enek No: </strong> {props.statistic.questionText}</label>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </div>\r\n\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\nexport default Statistics;"]},"metadata":{},"sourceType":"module"}