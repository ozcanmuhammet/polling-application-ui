{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OZCAN\\\\Desktop\\\\Workspaces\\\\polling-application-ui\\\\src\\\\pages\\\\Statistics.js\";\nimport React, { useState, useEffect } from 'react';\nimport { List } from 'semantic-ui-react';\nimport pollingApi from '../apis/pollingApi';\nimport PollHeader from '../components/PollHeader';\nimport Question from '../components/Question';\nimport { HTTP_OK } from '../util/Constants';\n\nconst Statistics = () => {\n  const [statisticsList, setStatisticsList] = useState([]);\n  useEffect(() => {\n    fetchStatistics();\n  }, []);\n\n  const fetchStatistics = async () => {\n    const response = await pollingApi.get(\"/admin/answers/statistics\");\n\n    if (response.status === HTTP_OK) {\n      console.log(response.data);\n      setStatisticsList(response.data);\n    }\n  };\n\n  const renderStatisticJson = () => {\n    if (statisticsList) {\n      return JSON.stringify(statisticsList);\n    }\n  };\n  /*const renderPendingQuestionItems = () => {\r\n      return pendingQuestionList.map((question, index) => {\r\n          return <Question question={question} index={index} />\r\n      });\r\n  }*/\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PollHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    divided: true,\n    relaxed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, renderStatisticJson()));\n};\n\nconst Item = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default Statistics;","map":{"version":3,"sources":["C:/Users/OZCAN/Desktop/Workspaces/polling-application-ui/src/pages/Statistics.js"],"names":["React","useState","useEffect","List","pollingApi","PollHeader","Question","HTTP_OK","Statistics","statisticsList","setStatisticsList","fetchStatistics","response","get","status","console","log","data","renderStatisticJson","JSON","stringify","Item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,eAAe,GAAG,YAAY;AAChC,UAAMC,QAAQ,GAAG,MAAMR,UAAU,CAACS,GAAX,CAAe,2BAAf,CAAvB;;AACA,QAAID,QAAQ,CAACE,MAAT,KAAoBP,OAAxB,EAAiC;AAC7BQ,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,IAArB;AACAP,MAAAA,iBAAiB,CAACE,QAAQ,CAACK,IAAV,CAAjB;AACH;AACJ,GAND;;AAQA,QAAMC,mBAAmB,GAAG,MAAM;AAC9B,QAAIT,cAAJ,EAAoB;AAChB,aAAOU,IAAI,CAACC,SAAL,CAAeX,cAAf,CAAP;AACH;AACJ,GAJD;AAOA;AACJ;AACA;AACA;AACA;;;AAEI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,OAAO,MAAb;AAAc,IAAA,OAAO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKS,mBAAmB,EADxB,CAFJ,CADJ;AAQH,CApCD;;AAsCA,MAAMG,IAAI,GAAG,MAAM;AACf,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH,CAND;;AAOA,eAAeb,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { List } from 'semantic-ui-react'\r\nimport pollingApi from '../apis/pollingApi';\r\nimport PollHeader from '../components/PollHeader';\r\nimport Question from '../components/Question';\r\nimport { HTTP_OK } from '../util/Constants';\r\n\r\nconst Statistics = () => {\r\n    const [statisticsList, setStatisticsList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchStatistics();\r\n    }, [])\r\n\r\n    const fetchStatistics = async () => {\r\n        const response = await pollingApi.get(\"/admin/answers/statistics\");\r\n        if (response.status === HTTP_OK) {\r\n            console.log(response.data);\r\n            setStatisticsList(response.data);\r\n        }\r\n    }\r\n\r\n    const renderStatisticJson = () => {\r\n        if (statisticsList) {\r\n            return JSON.stringify(statisticsList);\r\n        }\r\n    }\r\n\r\n\r\n    /*const renderPendingQuestionItems = () => {\r\n        return pendingQuestionList.map((question, index) => {\r\n            return <Question question={question} index={index} />\r\n        });\r\n    }*/\r\n\r\n    return (\r\n        <div>\r\n            <PollHeader />\r\n            <List divided relaxed>\r\n                {renderStatisticJson()}\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Item = () => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Statistics;"]},"metadata":{},"sourceType":"module"}