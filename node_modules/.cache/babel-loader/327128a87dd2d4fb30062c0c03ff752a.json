{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OZCAN\\\\Desktop\\\\Workspaces\\\\polling-application-ui\\\\src\\\\components\\\\Question.js\";\nimport React, { useState } from 'react';\nimport { Container, Grid, Checkbox } from 'semantic-ui-react';\nimport history from '../history';\n\nconst Question = props => {\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const renderOptionsList = () => {\n    return props.question.optionDtoList.map(option => {\n      return /*#__PURE__*/React.createElement(Answer, {\n        option: option,\n        setOption: answer,\n        selectedOption: selectedOption,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 20\n        }\n      });\n    });\n  };\n\n  const answer = optionNo => {\n    setSelectedOption(optionNo);\n    props.setAnswer(props.question.id, optionNo);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: 1,\n    divided: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }, `${props.index + 1}) `), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 66\n    }\n  }, props.question.text))), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, renderOptionsList())), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, props.text));\n};\n\nconst Answer = props => {\n  console.log(props);\n  return /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    label: {\n      children: props.option.optionText\n    },\n    value: props.option.optionNo,\n    checked: props.option.optionNo === props.selectedOption,\n    onClick: () => props.setOption(props.option.optionNo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Question;","map":{"version":3,"sources":["C:/Users/OZCAN/Desktop/Workspaces/polling-application-ui/src/components/Question.js"],"names":["React","useState","Container","Grid","Checkbox","history","Question","props","selectedOption","setSelectedOption","renderOptionsList","question","optionDtoList","map","option","answer","optionNo","setAnswer","id","index","text","Answer","console","log","children","optionText","setOption"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,QAA1B,QAA0C,mBAA1C;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,IAAD,CAApD;;AAEA,QAAMS,iBAAiB,GAAG,MAAM;AAC5B,WAAOH,KAAK,CAACI,QAAN,CAAeC,aAAf,CAA6BC,GAA7B,CAAkCC,MAAD,IAAY;AAChD,0BAAO,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAEA,MAAhB;AAAwB,QAAA,SAAS,EAAEC,MAAnC;AAA2C,QAAA,cAAc,EAAEP,cAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,CAAP;AAGH,GAJD;;AAMA,QAAMO,MAAM,GAAIC,QAAD,IAAc;AACzBP,IAAAA,iBAAiB,CAACO,QAAD,CAAjB;AACAT,IAAAA,KAAK,CAACU,SAAN,CAAgBV,KAAK,CAACI,QAAN,CAAeO,EAA/B,EAAmCF,QAAnC;AACH,GAHD;;AAKA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAkB,IAAA,OAAO,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAU,GAAET,KAAK,CAACY,KAAN,GAAc,CAAE,IAA5B,CADJ,eAC6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQZ,KAAK,CAACI,QAAN,CAAeS,IAAvB,CAD7C,CADJ,CADJ,eAOI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,iBAAiB,EADtB,CAPJ,CADJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQH,KAAK,CAACa,IAAd,CAbJ,CADJ;AAkBH,CAhCD;;AAkCA,MAAMC,MAAM,GAAId,KAAD,IAAW;AACtBe,EAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACA,sBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEiB,MAAAA,QAAQ,EAAEjB,KAAK,CAACO,MAAN,CAAaW;AAAzB,KAAjB;AAAwD,IAAA,KAAK,EAAElB,KAAK,CAACO,MAAN,CAAaE,QAA5E;AAAsF,IAAA,OAAO,EAAET,KAAK,CAACO,MAAN,CAAaE,QAAb,KAA0BT,KAAK,CAACC,cAA/H;AAA+I,IAAA,OAAO,EAAE,MAAMD,KAAK,CAACmB,SAAN,CAAgBnB,KAAK,CAACO,MAAN,CAAaE,QAA7B,CAA9J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAPD;;AAUA,eAAeV,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Grid, Checkbox } from 'semantic-ui-react'\r\nimport history from '../history';\r\n\r\nconst Question = (props) => {\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n    const renderOptionsList = () => {\r\n        return props.question.optionDtoList.map((option) => {\r\n            return <Answer option={option} setOption={answer} selectedOption={selectedOption} />\r\n        });\r\n    }\r\n\r\n    const answer = (optionNo) => {\r\n        setSelectedOption(optionNo);\r\n        props.setAnswer(props.question.id, optionNo);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns={1} divided>\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <strong>{`${props.index + 1}) `}</strong><label>{props.question.text}</label>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n\r\n                <Grid.Row >\r\n                    {renderOptionsList()}\r\n                </Grid.Row>\r\n            </Grid>\r\n\r\n            <label>{props.text}</label>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Answer = (props) => {\r\n    console.log(props);\r\n    return (\r\n        <Grid.Column>\r\n            <Checkbox label={{ children: props.option.optionText }} value={props.option.optionNo} checked={props.option.optionNo === props.selectedOption} onClick={() => props.setOption(props.option.optionNo)} />\r\n        </Grid.Column>\r\n    )\r\n}\r\n\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}